# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build 

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

on:
  push:
    tags:
      - v*

env:
  releaseNumber: '0.1.8.1'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Look at contents of build dir.
      run: ls -l build/libs

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Please check the commit log for the changes in this release, until this has been changed.
        draft: false
        prerelease: true

    - name: Upload Release Asset - API
      id: upload-release-asset-api
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: build/libs/MatterOverdrive-FHE-1.12.2-${{ env.releaseNumber }}-api.jar
        asset_name: MatterOverdrive-FHE-1.12.2-${{ env.releaseNumber }}-api.jar
        asset_content_type: application/jar

    - name: Upload Release Asset - DEOBF
      id: upload-release-asset-deobf
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: build/libs/MatterOverdrive-FHE-1.12.2-${{ env.releaseNumber }}-deobf.jar
        asset_name: MatterOverdrive-FHE-1.12.2-${{ env.releaseNumber }}-deobf.jar
        asset_content_type: application/jar

    - name: Upload Release Asset - Sources
      id: upload-release-asset-sources
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: build/libs/MatterOverdrive-FHE-1.12.2-${{ env.releaseNumber }}-sources.jar
        asset_name: MatterOverdrive-FHE-1.12.2-${{ env.releaseNumber }}-sources.jar
        asset_content_type: application/jar

    - name: Upload Release Asset - Universal
      id: upload-release-asset-universal
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: build/libs/MatterOverdrive-FHE-1.12.2-${{ env.releaseNumber }}-universal.jar
        asset_name: MatterOverdrive-FHE-1.12.2-${{ env.releaseNumber }}-universal.jar
        asset_content_type: application/jar
